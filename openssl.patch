From 2c5ded9ced62c779d6ad63c7e34def685c8f0239 Mon Sep 17 00:00:00 2001
From: ksjogo <jogo@kronberger-spiele.de>
Date: Tue, 24 Feb 2015 15:57:40 +0000
Subject: [PATCH] [AZURE] openssl fixes

---
 .../sysext/install/Classes/SystemEnvironment/Check.php  |  4 +++-
 .../sysext/rsaauth/Classes/Backend/AjaxLoginHandler.php |  3 ++-
 typo3/sysext/rsaauth/Classes/Backend/PhpBackend.php     | 17 +++++++++++++----
 typo3/sysext/rsaauth/Classes/Backend/openssl.cnf        |  9 +++++++++
 typo3conf/AdditionalConfiguration.php                   |  5 ++++-
 typo3conf/openssl.cnf                                   |  9 +++++++++
 6 files changed, 40 insertions(+), 7 deletions(-)
 create mode 100644 typo3/sysext/rsaauth/Classes/Backend/openssl.cnf
 create mode 100644 typo3conf/openssl.cnf

diff --git a/typo3/sysext/install/Classes/SystemEnvironment/Check.php b/typo3/sysext/install/Classes/SystemEnvironment/Check.php
index 0536143..6b6e5f1 100644
--- a/typo3/sysext/install/Classes/SystemEnvironment/Check.php
+++ b/typo3/sysext/install/Classes/SystemEnvironment/Check.php
@@ -550,7 +550,9 @@ class Check {
 	 */
 	protected function checkOpenSslInstalled() {
 		if (extension_loaded('openssl')) {
-			$testKey = @openssl_pkey_new();
+            //AdditionalConfiguration is not loaded yet, so we have to hardcore the path
+            $configPath = realpath(dirname(__FILE__) . "/../../../../../typo3conf/openssl.cnf");
+			$testKey = @openssl_pkey_new(array('config' => $configPath));
 			if (is_resource($testKey)) {
 				openssl_free_key($testKey);
 				$status = new Status\OkStatus();
diff --git a/typo3/sysext/rsaauth/Classes/Backend/AjaxLoginHandler.php b/typo3/sysext/rsaauth/Classes/Backend/AjaxLoginHandler.php
index 72a8bd5..86b21fa 100644
--- a/typo3/sysext/rsaauth/Classes/Backend/AjaxLoginHandler.php
+++ b/typo3/sysext/rsaauth/Classes/Backend/AjaxLoginHandler.php
@@ -26,7 +26,8 @@ class AjaxLoginHandler {
 	 * @return void
 	 */
 	public function getRsaPublicKey(array $parameters, \TYPO3\CMS\Core\Http\AjaxRequestHandler $parent) {
-		$backend = \TYPO3\CMS\Rsaauth\Backend\BackendFactory::getBackend();
+        putenv("OPENSSL_CONF=" . dirname(__FILE__) . "\..\..\..\..\..\typo3conf\AdditionalConfiguration.php");
+        $backend = \TYPO3\CMS\Rsaauth\Backend\BackendFactory::getBackend();
 		if ($backend !== NULL) {
 			$keyPair = $backend->createNewKeyPair();
 			$storage = \TYPO3\CMS\Rsaauth\Storage\StorageFactory::getStorage();
diff --git a/typo3/sysext/rsaauth/Classes/Backend/PhpBackend.php b/typo3/sysext/rsaauth/Classes/Backend/PhpBackend.php
index a6e4f16..1151f39 100644
--- a/typo3/sysext/rsaauth/Classes/Backend/PhpBackend.php
+++ b/typo3/sysext/rsaauth/Classes/Backend/PhpBackend.php
@@ -22,6 +22,15 @@ namespace TYPO3\CMS\Rsaauth\Backend;
  * @author Dmitry Dulepov <dmitry@typo3.org>
  */
 class PhpBackend extends \TYPO3\CMS\Rsaauth\Backend\AbstractBackend {
+
+    /**
+	 * On AZURE we set the env in AdditionalConfiguration.php
+	 */
+    private static function OpenSSLConfig() {
+        $w = array('config' => dirname(__FILE__) . "\openssl.cnf");
+        return $w;
+    }
+
 	/**
 	 * Creates a new key pair for the encryption or gets the existing key pair (if one already has been generated).
 	 *
@@ -37,14 +46,14 @@ class PhpBackend extends \TYPO3\CMS\Rsaauth\Backend\AbstractBackend {
 			return $keyPair;
 		}
 
-		$privateKey = @openssl_pkey_new();
+		$privateKey = @openssl_pkey_new(self::OpenSSLConfig());
 		if ($privateKey !== FALSE) {
 			// Create private key as string
 			$privateKeyStr = '';
-			openssl_pkey_export($privateKey, $privateKeyStr);
+			openssl_pkey_export($privateKey, $privateKeyStr, NULL, self::OpenSSLConfig());
 			// Prepare public key information
 			$exportedData = '';
-			$csr = openssl_csr_new(array(), $privateKey);
+			$csr = openssl_csr_new(array(), $privateKey, self::OpenSSLConfig());
 			openssl_csr_export($csr, $exportedData, FALSE);
 			// Get public key (in fact modulus) and exponent
 			$publicKey = $this->extractPublicKeyModulus($exportedData);
@@ -92,7 +101,7 @@ class PhpBackend extends \TYPO3\CMS\Rsaauth\Backend\AbstractBackend {
 			// PHP extension has to be configured properly. It
 			// can be installed and available but will not work unless
 			// properly configured. So we check if it works.
-			$testKey = @openssl_pkey_new();
+			$testKey = @openssl_pkey_new(self::OpenSSLConfig());
 			if (is_resource($testKey)) {
 				openssl_free_key($testKey);
 				$result = TRUE;
diff --git a/typo3/sysext/rsaauth/Classes/Backend/openssl.cnf b/typo3/sysext/rsaauth/Classes/Backend/openssl.cnf
new file mode 100644
index 0000000..d08ccc0
--- /dev/null
+++ b/typo3/sysext/rsaauth/Classes/Backend/openssl.cnf
@@ -0,0 +1,9 @@
+# this is an fuzzyily constructed minimal openssl config file
+# to allow the use of the openssl_pkey_new and openssl_csr_new
+# and openssl_csr_export functions in php
+[ req ]
+default_bits = 2048
+distinguished_name = req_distinguished_name
+[ req_distinguished_name ]
+[ v3_req ]
+[ v3_ca ]
\ No newline at end of file
diff --git a/typo3conf/AdditionalConfiguration.php b/typo3conf/AdditionalConfiguration.php
index 269cb19..5591bb1 100644
--- a/typo3conf/AdditionalConfiguration.php
+++ b/typo3conf/AdditionalConfiguration.php
@@ -10,4 +10,7 @@ $GLOBALS['TYPO3_CONF_VARS']['SYS']['setDBinit'] = "SET SESSION sql_mode='';";
 //set to flock as simple can have problems on azure
 $GLOBALS['TYPO3_CONF_VARS']['SYS']['lockingMode'] = 'flock';
 
-$GLOBALS['TYPO3_CONF_VARS']['EXTCONF']['rtehtmlarea']['defaultConfiguration'] = 'typical';
\ No newline at end of file
+$GLOBALS['TYPO3_CONF_VARS']['EXTCONF']['rtehtmlarea']['defaultConfiguration'] = 'typical';
+
+//fix openssl config path
+putenv("OPENSSL_CONF=" . dirname(__FILE__) . "\openssl.cnf");
\ No newline at end of file
diff --git a/typo3conf/openssl.cnf b/typo3conf/openssl.cnf
new file mode 100644
index 0000000..d08ccc0
--- /dev/null
+++ b/typo3conf/openssl.cnf
@@ -0,0 +1,9 @@
+# this is an fuzzyily constructed minimal openssl config file
+# to allow the use of the openssl_pkey_new and openssl_csr_new
+# and openssl_csr_export functions in php
+[ req ]
+default_bits = 2048
+distinguished_name = req_distinguished_name
+[ req_distinguished_name ]
+[ v3_req ]
+[ v3_ca ]
\ No newline at end of file
-- 
2.2.1

